<Application x:Class="Wpf_SmallWorld.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml"
              xmlns:local="clr-namespace:Wpf_SmallWorld">


    <Application.Resources>

        <Style x:Key="ButtonMenu" TargetType="RadioButton">
            <!-- TODO Faire quelque chose de plus propre pour tous les background-->
            <Setter Property="Background" Value="#272A3D"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Height" Value="40"/>

            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Border"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter Name="Content" Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter Property="Button.Background" Value="White"/>
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter TargetName="Border" Property="Button.BorderBrush" Value="#DE2A2A"/>
                                <Setter TargetName="Border" Property="Button.BorderThickness" Value="6,0,0,0"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Button.Background" Value="White"/>
                                <Setter Property="Foreground" Value="Gray"/>
                                <Setter TargetName="Content" Property="Margin" Value="30,0,0,0"/>
                                <Setter TargetName="Border" Property="Button.BorderBrush" Value="#DE2A2A"/>
                                <Setter TargetName="Border" Property="Button.BorderThickness" Value="6,0,0,0"/>

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonNext" TargetType="Button">
            <Setter Property="Foreground" Value="#272A3D"/>
            <Setter Property="FontSize" Value="20"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <DockPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                <ContentPresenter DockPanel.Dock="Left" Content="{TemplateBinding  Content}"  />
                                <Image DockPanel.Dock="Right" Name="Suiv" Margin="5,5,5,0" Source="Resources/suiv.png" Width="10" Height="10" />
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources/suivOver.png" TargetName="Suiv" />
                                <Setter Property="Foreground" Value="#89847C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ButtonBack" TargetType="Button">
            <Setter Property="Foreground" Value="#272A3D"/>
            <Setter Property="FontSize" Value="20"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border>
                            <DockPanel HorizontalAlignment="Right" VerticalAlignment="Center">
                                <ContentPresenter DockPanel.Dock="Right" Content="{TemplateBinding  Content}"  />
                                <Image DockPanel.Dock="Left" Name="Prec" Margin="5,5,5,0" Source="Resources/prec.png" Width="10" Height="10"/>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsMouseOver" Value="True">
                                <Setter Property="Source" Value="Resources/precOver.png" TargetName="Prec"/>
                                <Setter Property="Foreground" Value="#89847C"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>


        <!-- RadioButton pour choix des peuples -->
        <Style x:Key="RadioNains" TargetType="RadioButton">
            <Setter Property="Background" Value="#272A3D"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="5,0,5,0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Button" Background="{TemplateBinding Background}">
                            <DockPanel Width="100" Height="80">
                                <Image DockPanel.Dock="Top" Source="Resources/smallWorld.png" Width="50" Height="30"/>
                                <ContentPresenter Height="20" DockPanel.Dock="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadioGaulois" TargetType="RadioButton">
            <Setter Property="Background" Value="#272A3D"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="5,0,5,0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Button" Background="{TemplateBinding Background}">
                            <DockPanel Width="100" Height="80">
                                <Image DockPanel.Dock="Top" Source="Resources/smallWorld.png" Width="50" Height="30"/>

                                <ContentPresenter Height="20" DockPanel.Dock="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RadioVikings" TargetType="RadioButton">
            <Setter Property="Background" Value="#272A3D"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="5,0,5,0" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Button" Background="{TemplateBinding Background}">
                            <DockPanel Width="100" Height="80">
                                <Image DockPanel.Dock="Top" Source="Resources/smallWorld.png" Width="50" Height="30"/>

                                <ContentPresenter Height="20" DockPanel.Dock="Bottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" />
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- ne marche pas avec le tag, alors que le chemin est bien capté par le tag-->
        <Style x:Key="Radio" TargetType="RadioButton">
            <Setter Property="Background" Value="#272A3D"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="5,0,5,0" />
            <Setter Property="Tag" Value=""/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Button" Background="{TemplateBinding Background}">
                            <DockPanel Width="100" Height="80">
                                <!--<Image DockPanel.Dock="Top" Source="{Binding Tag}" Width="50" Height="30"/>-->
                                <ContentPresenter Content="{TemplateBinding Content}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Bouton radio pour le choix de la taille de la carte -->
        <Style x:Key="RadioTaille" TargetType="RadioButton">
            <Setter Property="Background" Value="#272A3D"/>
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="10,0,10,0" />
            <Setter Property="Tag" Value=""/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Border Name="Button" Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" Value="#DE2A2A"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- style du rectangle lorsqu'il est selectionné-->
        <Style TargetType="Rectangle" x:Key="selectionStyle" >
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Stroke" Value="Red"/>
            <Setter Property="StrokeThickness" Value="3"/>
            <Setter Property="Panel.ZIndex" Value="333"/>
            <!-- pour avoir un affichage au premier plan -->
            <Setter Property="Visibility" Value= "Collapsed"/>
            <!-- visibilité par défaut = cachée -->
        </Style>

        <!-- style du rectangle lorsqu'une unité est selectionnée et qu'elle demande un déplacement-->
        <Style TargetType="Rectangle" x:Key="UniteSelectionnee" >
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Stroke" Value="Blue"/>
            <Setter Property="StrokeThickness" Value="3"/>
            <Setter Property="Panel.ZIndex" Value="333"/>
            <!-- pour avoir un affichage au premier plan -->
            <Setter Property="Visibility" Value= "Collapsed"/>
            <!-- visibilité par défaut = cachée -->
        </Style>

        <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border Name="Border" BorderThickness="0" CornerRadius="2">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Black" />
                            </Border.BorderBrush>
                            <ScrollViewer Margin="0" Focusable="false">
                                <StackPanel Margin="2" IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>

</Application>
